apiVersion: v1
kind: Namespace
metadata:
  name: kubmetheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kubmetheus
  labels:
    app: kubmetheus
  name: kubmetheus-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubmetheus
  template:
    metadata:
      labels:
        app: kubmetheus
    spec:
      containers:
      - name: kubmetheus-pod
        image: 10.100.124.45:5000/kubmetheus:0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kubmetheus
  labels:
    app: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      volumes:
        - name: config-vol
          configMap: 
            name: prometheus-config
      containers:
      - name: prometheus
        image: prom/prometheus:v2.33.4
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config-vol
          mountPath: /etc/prometheus/prometheus.yml
          subPath: scrapeconfig.yml
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels: 
    app: kubmetheus
  name: prometheus-scraping-role
rules:
- apiGroups: [""]
  resources: ["endpoints", "services", "pods"]
  verbs: ["get", "list", "watch"]
  
---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels: 
    app: kubmetheus
  namespace: kubmetheus
  name: prometheus

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-scraping-rolebinding
  labels: 
    app: kubmetheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-scraping-role
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kubmetheus

